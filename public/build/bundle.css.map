{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../TodoItem.svelte",
    "../../Todos.svelte"
  ],
  "sourcesContent": [
    "<script>\n\texport let name;\n</script>\n\n<main>\n\t<h1>Hello {name}!</h1>\n\t<p>Visit the <a href=\"https://svelte.dev/tutorial\">Svelte tutorial</a> to learn how to build Svelte apps.</p>\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\n\th1 {\n\t\tcolor: #ff3e00;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 4em;\n\t\tfont-weight: 100;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>",
    "<script>\n\n    import { createEventDispatcher } from 'svelte';\n\n    const dispatch = createEventDispatcher();\n\n    function remove() {\n        dispatch('remove', { id });\n    }\n\n    function toggleStatus() {\n        let newStatus = !complete;\n        dispatch('toggle', {\n            id,\n            newStatus\n        });\n    }\n\n\n    export let id; // document ID\n    export let text;\n    export let complete;\n</script>\n\n<style>\n    .is-complete {\n        text-decoration: line-through;\n        color: green;\n    }\n</style>\n\n\n<li>\n\n    {#if complete}\n        <span class=\"is-complete\">{ text }</span>\n        <button on:click={toggleStatus}> ‚úîÔ∏è </button>\n    {:else}\n        <span>{ text }</span>\n        <button on:click={toggleStatus}> ‚ùå </button>\n    {/if}\n\n    <button on:click={remove}> üóë </button>\n\n</li>\n",
    "<script>\n    import TodoItem from './TodoItem.svelte';\n    import { db } from './firebase';\n    import { collectionData } from 'rxfire/firestore';\n    import { startWith } from 'rxjs/operators';\n\n    // User ID passed from parent\n    export let uid;\n\n\n    // Form Text\n    let text = 'some task';\n\n    // Query requires an index, see screenshot below\n    const query = db.collection('todos').where('uid', '==', uid).orderBy('created')\n\n    const todos = collectionData(query, 'id').pipe(startWith([]));\n\n\n    function add() {\n        db.collection('todos').add({ uid, text, complete: false, created: Date.now() });\n        text = '';\n    }\n\n    function updateStatus(event) {\n        const { id, newStatus } = event.detail;\n        db.collection('todos').doc(id).update({ complete: newStatus });\n    }\n\n    function removeItem(event) {\n        const { id } = event.detail;\n        db.collection('todos').doc(id).delete();\n    }\n</script>\n\n<style>\n    input { display: block }\n</style>\n\n<ul>\n    {#each $todos as todo}\n\n        <TodoItem {...todo} on:remove={removeItem} on:toggle={updateStatus} />\n\n    {/each}\n</ul>\n\n\n<input bind:value={text}>\n\n<button on:click={add}>Add Task</button>\n"
  ],
  "names": [],
  "mappings": "AAUC,IAAI,eAAC,CAAC,AACL,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC,AAED,EAAE,eAAC,CAAC,AACH,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AACjB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,IAAI,eAAC,CAAC,AACL,SAAS,CAAE,IAAI,AAChB,CAAC,AACF,CAAC;ACHE,YAAY,eAAC,CAAC,AACV,eAAe,CAAE,YAAY,CAC7B,KAAK,CAAE,KAAK,AAChB,CAAC;ACQD,KAAK,eAAC,CAAC,AAAC,OAAO,CAAE,KAAK,CAAC,CAAC"
}